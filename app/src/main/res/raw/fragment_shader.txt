precision mediump float;

varying vec3 v_normal;
varying vec3 v_position;
varying vec3 dl_position;

uniform vec3 dir_light_pos;

vec3 dir_light_color = vec3(1.0, 1.0, 1.0);
vec3 obj_color = vec3(1.0, 1.0, 1.0);
void direct_lighting();

 void main()
 {
    // Normal coloring
    //gl_FragColor = vec4(v_normal, 1.0);

    // Direct lighting
    direct_lighting();
 }

 void direct_lighting()
 {
    // Light vector
    vec3 L = normalize(dir_light_pos - v_position);//(dl_position);// - v_position);

    // Normal vector
    vec3 N = normalize(v_normal);

    float dot_product = dot(N, L);
    if(dot_product >= 0.0)
        gl_FragColor = vec4(0.0, 0.0, 1.0 * dot_product, 1.0);
    else
        gl_FragColor = vec4(1.0 * abs(dot_product), 0.0, 0.0, 1.0);

/*
    // Diffuse
    float k_d = 0.6;
    float dot_product = max(dot(N, L), 0.0);
    vec3 diffuse = k_d * dot_product * dir_light_color;

    // Ambient
    vec3 ambi = vec3(0.1, 0.1, 0.1);

    gl_FragColor = vec4(diffuse * obj_color + ambi * obj_color, 1.0);

    //gl_FragColor = vec4(N, 1.0);
    */
 }